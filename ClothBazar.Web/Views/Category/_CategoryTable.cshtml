@model ClothBazar.Web.ViewModels.CategorySearchViewModel


<div>
    <form method="post">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label>Search</label>
                    <input class="form-control" id="searchTxt" type="search" value="@Model.SearchTerm"/>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>Action</label>
                    <div class="row">
                        <div class="col-md-4 pr-0">
                            <button id="searchBtn" class="form-control btn btn-primary" type="button">Search</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button id="resetBtn" class="form-control btn btn-primary" type="button">Reset</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button id="newBtn" class="form-control btn btn-primary" type="button">New</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th class="font-weight-bold">Category Name</th>
                <th class="font-weight-bold">Products</th>
                <th class="wrap-td font-weight-bold">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Categories != null && Model.Categories.Count > 0)
            {
                foreach (var category in Model.Categories)
                {
                    <tr>
                        <td>@category.Name</td>
                        <td>
                            @category.Products.Count
                        </td>
                        <td class="wrap-td">
                            <button class="editBtn" data-id="@category.ID">Edit</button>
                            <button class="deleteBtn" data-id="@category.ID">Delete</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="3" class="text-danger">No Categories found</td></tr>
            }
        </tbody>
    </table>

    <div>
        @if (Model.Pager != null)
        {

            if (Model.Pager.CurrentPage > 1)
            {
                <button class="pageButtons" data-pageno="1">First</button>
                <button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage - 1)">Previous</button>
            }

            for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                <button class="@activeClass pageButtons" data-pageno="@page">@page</button>
            }

            if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage + 1)">Next</button>
                <button class="pageButtons" data-pageno="@Model.Pager.EndPage">Last</button>
            }
        }
    </div>
</div>



<script>
    $(".pageButtons").click(function () {
        var searchValue = '@Model.SearchTerm'
        $.ajax({
            url: '@Url.Action("CategoryTable", "Category")',//'/Product/ProductTable',
            data: { search: searchValue, pageNo: $(this).attr("data-pageNo") }
        })
            .done(function (response) {
                $("#tableContainer").html(response);
            }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();
        $.ajax({
            url: '@Url.Action("CategoryTable", "Category")',//'/Category/CategoryTable',//Using URL helper instead of hardcoding
            data: { search: searchValue }
        })
            .done(function (response) {
                $("#tableContainer").html(response);
            }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

    $("#resetBtn").click(function () {
        var searchValue = ''
        $.ajax({
            url: '@Url.Action("CategoryTable", "Category")',//'/Category/CategoryTable',//Using URL helper instead of hardcoding
            data: { search: searchValue }
        })
            .done(function (response) {
                $("#tableContainer").html(response);
            }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

    $("#newBtn").click(function () {

        $.ajax({
            url: '@Url.Action("Create", "Category")',//'/Category/Create',
        })
            .done(function (response) {
                $("#actionContainer").html(response);

                focusAction("actionContainer");
            }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

    $(".editBtn").click(function () {

        $.ajax({
            url: '@Url.Action("Edit", "Category")',//'/Category/Edit',
            data: { ID: $(this).attr("data-id") }
        })
            .done(function (response) {
                $("#actionContainer").html(response);

                focusAction("actionContainer");
            }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

    $(".deleteBtn").click(function () {
        var confirmDelete = confirm("Are you sure you want to delete?")
        if (confirmDelete) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete", "Category")',//'/Category/Delete',
                data: { ID: $(this).attr("data-id") }
            })
                .done(function (response) {
                    $("#tableContainer").html(response);
                }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {
                    alert("fail");
                });
        }
    });
</script>
