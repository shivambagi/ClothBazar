@model ProductSearchViewModel
@{
    ViewBag.Title = "ProductTable";
}


@*<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.11.4/css/jquery.dataTables.min.css">
<script src="//cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>*@

<div>
    <form method="post">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label>Search</label>
                    <input class="form-control" id="searchTxt" type="search" value="@Model.SearchTerm" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>Action</label>
                    <div class="row">
                        <div class="col-md-4 pr-0">
                            <button id="searchBtn" class="form-control btn btn-primary" type="button">Search</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button id="resetBtn" class="form-control btn btn-primary" type="button">Reset</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button id="newBtn" class="form-control btn btn-primary" type="button">New</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<div>
    <table id="ProductsTable" class="table table-striped">
        <thead>
            <tr>
                <th class="font-weight-bold">Product Name</th>
                <th class="font-weight-bold">Category</th>
                <th class="font-weight-bold">Price</th>
                <th class="wrap-td font-weight-bold">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Products != null && Model.Products.Count > 0)
            {
                foreach (var product in Model.Products)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>
                            @if (product.Category != null)
                            {
                                <text>@product.Category.Name</text>
                            }
                            else
                            {
                                <text>-</text>
                            }
                        </td>
                        <td>@product.Price</td>
                        <td class="wrap-td">
                            <button class="editBtn" data-id="@product.ID">Edit</button>
                            <button class="deleteBtn" data-id="@product.ID">Delete</button>
                            <button class="addtoCart" data-id="@product.ID">Add To Cart</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="4" class="text-danger">No products found</td></tr>
            }

        </tbody>
    </table>
    <div>
        @if (Model.PageNo != 1)
        {
            <button class="pageButtons" data-pageNo="@(Model.PageNo - 1 )">Previous</button>
        }

        <button class="pageButtons" data-pageNo="@(Model.PageNo + 1 )">Next</button>

    </div>
</div>



<script>

    //$('#ProductsTable').DataTable();//add this just to display table sorting,pagination at specified id

    $(".pageButtons").click(function () {
        var searchValue = $("#searchTxt").val();
        $.ajax({
            url: '@Url.Action("ProductTable", "Product")',//'/Product/ProductTable',
            data: { pageNo: $(this).attr("data-pageNo") }
        })
            .done(function (response) {
                $("#tableContainer").html(response);
            }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();
        $.ajax({
            url: '@Url.Action("ProductTable", "Product")',//'/Product/ProductTable',
            data: { search: searchValue }
        })
            .done(function (response) {
                $("#tableContainer").html(response);
            }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

    $("#resetBtn").click(function () {
        var searchValue = ''
        $.ajax({
            url: '@Url.Action("ProductTable", "Product")',//'/Product/ProductTable',
            data: { search: searchValue }
        })
            .done(function (response) {
                $("#tableContainer").html(response);
            }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

    $("#newBtn").click(function () {

        $.ajax({
            url: '@Url.Action("Create", "Product")',//'/Product/Create',
        })
            .done(function (response) {
                $("#actionContainer").html(response);

                focusAction("actionContainer");
            }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

    $(".editBtn").click(function () {

        $.ajax({
            url: '@Url.Action("Edit", "Product")',//'/Product/Edit',
            data: { ID: $(this).attr("data-id") }
        })
            .done(function (response) {
                $("#actionContainer").html(response);

                focusAction("actionContainer");
            }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

    $(".deleteBtn").click(function () {

        swal({
            title: "Are you sure?",
            text: "Once deleted, you will not be able to recover this imaginary file!",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("Delete", "Product")',//'/Product/Delete',
                        data: { ID: $(this).attr("data-id") }
                    })
                        .done(function (response) {
                            $("#tableContainer").html(response);
                            swal("Your product has been deleted!", {
                                icon: "success",
                            });
                        }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {
                            alert("fail");
                        });
                }
            });

        //var confirmDelete = confirm("Are you sure you want to delete?")
        //if (confirmDelete) {
        //    $.ajax({
        //        type: 'POST',
        //        url: '/Product/Delete',
        //        data: { ID: $(this).attr("data-id") }
        //    })
        //        .done(function (response) {
        //            $("#tableContainer").html(response);
        //        }).fail(function (XMLHTTPRequest, textStatus, errorThrown) {
        //            alert("fail");
        //        });
        //}
    });

    var products = []; //use this to add products in cart (cookies)

    $(".addtoCart").click(function () {
        var productID = $(this).attr('data-id');

        products.push(productID); //if .join('-') is not used the it will append with some charatcers for ',' join will help in identifying more easily

        $.cookie('CartProducts', products.join('-'), { path: '/' });
    });

</script>